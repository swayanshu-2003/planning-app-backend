// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int                @id @default(autoincrement())
  username       String             @unique
  password       String
  firstName      String
  lastName       String?
  todos          Todo[]             @relation("UserTodos")
  uuid           String             @unique @default(uuid())
  collaborations TodoCollaborator[]
  comments       Comment[]
}

model Todo {
  id            Int                @id @default(autoincrement())
  title         String
  description   String?
  done          Boolean            @default(false)
  ownerId       String // Field for the owner of the todo
  // userId        Int
  isDeleted     Boolean            @default(false)
  shared        Boolean            @default(false)
  uuid          String             @unique @default(uuid())
  owner         User               @relation("UserTodos", fields: [ownerId], references: [uuid])
  collaborators TodoCollaborator[]
  comments      Comment[]
  createdAt     DateTime           @default(now())
}

model TodoCollaborator {
  userId String
  todoId String
  user   User   @relation(fields: [userId], references: [uuid])
  todo   Todo   @relation(fields: [todoId], references: [uuid])

  @@id([userId, todoId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  authorId  String
  todoId    String
  createdAt DateTime @default(now())

  author User @relation(fields: [authorId], references: [uuid])
  todo   Todo @relation(fields: [todoId], references: [uuid])

  @@index([authorId])
  @@index([todoId])
}
